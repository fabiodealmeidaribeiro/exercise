*
{
    margin : 0;
    padding : 0;
    box-sizing : border-box;
};

%background
{
    background-color : #000;
};

html,
body
{
    @extend %background; 
};

@mixin padding ($values...)
{
    padding : $values;    
};

p
{
    $size : 12px;
    $height : $size * 3;
    font : #{ $size } / #{ $height };
    margin : 20px 0;

    $width  : 1000%;
    width : $width / 3 * 2;

    $width  : 1000px;
    width : round($number : $width / 3 * 2);

    width : round($number : 1.7) / 2;
    @include padding(10px, 20px);
};

$background : #000;
$border-style : solid 1px $color;
$color : #fff;
$font-size : 1.2rem;
$width : 100%;

nav
{
    background-color : $background;
    width : $width;
    ul
    {
        list-style : none;
        li
        {
            color : $color;
            display : inline-block;
            a
            {
                color : red;
                &:hover
                {
                    color : yellow;
                }
            };
        };
    };
    
    
};

$family : 'Lucida Grande';
$weight : bold;
$width : 3.5rem;

aside
{
    width : $width;
};

section
{
    font:
    {
        family : $family;
        weight : $weight;
    }
}

$background : #000;
$background-nav : rgb(0, 0, 0);
$background-section : rgba(0, 0, 0, 0.7);
$color : red;
$color-dark : true;
$color-ligth : null;
$margin : 10px 20px 10px 20px;

$social:
(
    facebook : red,
    flicker : black,
    github : yellow,
    googleplus : #fff,
    instagram : #ccc
);

$class : destaque;

$attr : border;

p.#{ $class }
{
    #{ $attr }-color : blue;
};

$class : msg;

.#{ $class }
{
    border : 1px solid;
    padding : 0px;
    text-align : center;
};

.#{ $class }-erro
{
    @extend .#{ $class };
    border:
    {
        color : #f00;
        radius : 5px;
    }
    color : #000;
};

.#{ $class }-alert
{
    @extend .#{ $class };
    border:
    {
        color : #f00;
        radius : 5px;
    }
    color : #101010 + #020202;
    background-color : rgba(1, 1, 1, 0.5) + rgba(2, 2, 2, 0.5);
};

p:before
{
    content : 'I have #{ 2 + 5 } coins.';
};

$value :  null;

p:before
{
    content : 'I have #{ $value } coins.';
};

@mixin border-radius ($radius)
{
    -webkit-border-radius : $radius;
       -moz-border-radius : $radius;
        -ms-border-radius : $radius;
            border-radius : $radius;
};

$class : content;

.#{ $class }
{
    @include border-radius(10px);
};

.#{ $class }-top
{
    @extend .#{ $class };
};

.#{ $class }-bottom
{
    @extend .#{ $class };
};

@mixin font ($size, $weight, $color) 
{
    font:
    {
        size : $size;
        weight : $weight;
    }
    color : $color;
};

p
{
    @include font(10px, 12px, #000);
};

@mixin title ($size, $weight, $color) 
{
    font:
    {
        size : $size;
        weight : $weight;
    }
    color : $color;
};

h1
{
    @include title($color : #000, $size : 12px, $weight : 24px);
};

div.last
{
    background : lighten($color : #000000, $amount : 0);
    background : darken($color : #000000, $amount : 0);
    font-family : quote($string : "");
    font-weight : unquote($string : "");
    padding : str-length($string : "");
    font-family : to-lower-case($string : "");
    font-family : to-upper-case($string : "");
    width : percentage($number : str-length($string : "bold"));
    margin : round($number : 0);
    margin : ceil($number : 2.5px);
    margin : floor($number : 2.5px);
};

@function fluid($object, $container) {
    @return $object / $container * 100%;
};

@function center($object, $container) {
    @return ($container - $object) / 2;
};

div
{
    width : fluid(400px, 1000px);
    margin : 0 auto 10px center(400px, 1000px);
    position : relative;
};

@mixin center {
    display : block;
    margin : 0 auto;
};

div
{
    @include center;
};

section
{
    @include center;
};

%center
{
    display : block;
    margin : 0 auto;
};

div
{
    @extend %center;
};

section
{
    @extend %center;   
};

$template : dark;

header
{
    font:
    {
        size : 10px;
        weight : 12px;
    };
    @if $template == dark
    {
        background : #000;
        color : #fff;
    }
    @else if $template == ligth
    {   
        background : #fff;
        color : #000;
    }
    @else
    {
        background : yellow;
        color : red;
    };
};

%margin
{
    margin : 0 auto;
}

@for $i from 1 through 3
{
    .item-#{ $i }
    {
        @extend %margin;
        width : 2px * $i;
    }
}

$size : 40;

$weight : $size * 10;

@for $index from 1 through 6
{
    $font-size : $size - $size / 10 * ($index - 1);
    $font-weight : $weight - $weight / 10 * ($index - 1);
    h#{ $index }
    {
        font-size : $font-size#{ px };
        font-weight : $font-weight;
        line-height : $font-size#{ px };
    };
};

@for $index from 1 to 3
{
    .item-#{ $index }
    {
        @extend %margin;
        width : 2px * $index;
    };
};

$number : ('one', 'two', 'three', 'fuor');

@each $var in $number
{
    .icon-#{ $var }
    {
        @extend %margin;
        background-image : url('/img/#{ $var }.png');
    };
};

.sidebar
{
    width : 30%;
    @media screen and (orientation : landscape)
    {
        width : 40%;
    };
};

$table : 768px;

$desktop : 1024px;

@mixin landscape
{
    @media screen and (orientation : landscape)
    {
        @content;
    };
};

@mixin tablet
{
    @media (min-width : #{ $table })
    {
        @content;
    };
};

header
{
    padding : 3em;
    @include tablet
    {
        padding : 2em;
    };
};

@mixin  desktop
{
    @media (min-width : #{ $desktop })
    {
        @content;
    };
};

@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@200&display=swap');

.div
{
    font-family : 'Oswald', sans-serif;
}

@import 'button.scss';

@import 'typography.scss';